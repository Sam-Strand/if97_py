import numpy as np
from numba import float64, vectorize

I = np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32])
J = np.array([-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41])
n = np.array([0.14632971213167, -0.84548187169114, -0.37563603672040e1, 0.33855169168385e1, -0.95791963387872, 0.15772038513228, -0.16616417199501e-1, 0.81214629983568e-3, 0.28319080123804e-3, -0.60706301565874e-3, -0.18990068218419e-1, -0.32529748770505e-1, -0.21841717175414e-1, -0.52838357969930e-4, -0.47184321073267e-3, -0.30001780793026e-3, 0.47661393906987e-4, -0.44141845330846e-5, -0.72694996297594e-15, -0.31679644845054e-4, -0.28270797985312e-5, -0.85205128120103e-9, -0.22425281908000e-5, -0.65171222895601e-6, -0.14341729937924e-12, -0.40516996860117e-6, -0.12734301741641e-8, -0.17424871230634e-9, -0.68762131295531e-18, 0.14478307828521e-19, 0.26335781662795e-22, -0.11947622640071e-22, 0.18228094581404e-23, -0.93537087292458e-25])

J_1 = J - 1

@vectorize([float64(float64, float64)], nopython=True, cache=True)
def γ_τ(π, τ):
    result = 0.0
    for i in range(len(n)):
        result += n[i] * (7.1 - π) ** I[i] * J[i] * (τ - 1.222) ** J_1[i]
    return result


@vectorize([float64(float64)], nopython=True, cache=True)
def get_π(p):
    return p / 16.53


@vectorize([float64(float64)], nopython=True, cache=True)
def get_τ(t):
    return 1386 / t

class WaterRegion:
    def enthalpy_t_p(self, t, p):
        """Удельная энтальпия от температуры и давления"""
        t_k = np.asarray(t, dtype=np.float64)
        p_k = np.asarray(p, dtype=np.float64)
        
        π = get_π(p_k)
        τ = get_τ(t_k)
        gamma = γ_τ(π, τ)
        return 639675.036 * gamma # τ * t * R * gamma
    
if __name__ == "__main__":
    water = WaterRegion()
    print(water.enthalpy_t_p(300, 3))   # 115331.27302144  0.115 331 273 × 10^3
    print(water.enthalpy_t_p(300, [80]))  # 184142.82773425  0.184 142 828 × 10^3
    print(water.enthalpy_t_p([500], [3]))   # 975542.23909723  0.975 542 239 × 10^3